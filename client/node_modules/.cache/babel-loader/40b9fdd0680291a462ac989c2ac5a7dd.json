{"ast":null,"code":"var _jsxFileName = \"/Users/jackson231/Desktop/react_projects/BaseReactTemplate/client/src/components/pages/contact.js\";\nimport React, { Component } from \"react\";\nimport { Form, FormGroup, Input, Label, Button } from \"reactstrap\";\nimport axios from \"axios\";\nimport Modal from \"react-modal\";\nModal.setAppElement(\"div\");\nconst customStyles = {\n  content: {\n    top: \"calc(50% + 27.5px)\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    width: \"35%\",\n    minWidth: \"250px\",\n    height: \"25%\",\n    minHeight: \"250px\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    padding: \"0\",\n    borderRadius: \"3px\",\n    border: \"none\"\n  }\n};\n\nclass Contact extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      nameError: \"\",\n      email: \"\",\n      emailError: \"\",\n      subject: \"\",\n      subjectError: \"\",\n      message: \"\",\n      messageError: \"\",\n      resData: \"\",\n      modalIsOpen: false\n    };\n\n    this.change = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        modalIsOpen: false\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.name === \"\") {\n        this.setState({\n          nameError: \"Please provide your name\"\n        });\n      } else {\n        this.setState({\n          nameError: \"\"\n        });\n      }\n\n      if (this.state.email === \"\") {\n        this.setState({\n          emailError: \"Please provide an email address\"\n        });\n      } else if (this.state.email === /^((?!@).)*$/ || this.state.email.indexOf(\".\") === -1) {\n        this.setState({\n          emailError: \"Please provide a valid email address\"\n        });\n      } else {\n        this.setState({\n          emailError: \"\"\n        });\n      }\n\n      if (this.state.subject === \"\") {\n        this.setState({\n          subjectError: \"Please provide a subject message\"\n        });\n      } else {\n        this.setState({\n          subjectError: \"\"\n        });\n      }\n\n      if (this.state.message === \"\") {\n        this.setState({\n          messageError: \"Please leave a message\"\n        });\n      } else {\n        this.setState({\n          messageError: \"\"\n        });\n      }\n\n      setTimeout(() => {\n        if (this.state.nameError === \"\" && this.state.emailError === \"\" && this.state.subjectError === \"\" && this.state.messageError === \"\") {\n          axios.post(\"/api/form\", {\n            name: this.state.name,\n            email: this.state.email,\n            subject: this.state.subject,\n            message: this.state.message\n          }).then(response => {\n            this.setState({\n              resData: response.data\n            });\n            this.setState({\n              modalIsOpen: true\n            });\n            this.setState({\n              name: \"\",\n              email: \"\",\n              subject: \"\",\n              message: \"\"\n            });\n          }).catch(function (error) {\n            console.log(error.response);\n          });\n        } else {\n          this.setState({\n            resData: \"Oops! Something went wrong!\"\n          });\n        }\n      }, 10);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"contactForm\",\n      className: \"container contact-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"full-width-row cta-form--bg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"cta-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"cta-form__label\",\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"name\",\n      value: this.state.name,\n      onChange: e => this.change(e),\n      type: \"text\",\n      className: \"cta-form__input\",\n      id: \"name\",\n      style: {\n        margin: `${this.state.nameError.length > 0 ? \"0\" : \"\"}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"form-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, this.state.nameError)), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"cta-form__label\",\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"email\",\n      value: this.state.email,\n      onChange: e => this.change(e),\n      type: \"text\",\n      className: \"cta-form__input\",\n      id: \"email\",\n      style: {\n        margin: `${this.state.emailError.length > 0 ? \"0\" : \"\"}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"form-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }, this.state.emailError), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"cta-form__label\",\n      htmlFor: \"subject\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 15\n      }\n    }, \"Subject\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"subject\",\n      value: this.state.subject,\n      onChange: e => this.change(e),\n      type: \"text\",\n      className: \"cta-form__input\",\n      id: \"subject\",\n      style: {\n        margin: `${this.state.subjectError.length > 0 ? \"0\" : \"\"}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"form-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }\n    }, this.state.subjectError), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"cta-form__label\",\n      htmlFor: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 15\n      }\n    }, \"Message\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"message\",\n      onChange: e => this.change(e),\n      value: this.state.message,\n      className: \"cta-form__textarea\",\n      id: \"message\",\n      style: {\n        margin: `${this.state.messageError.length > 0 ? \"0\" : \"\"}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"form-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 15\n      }\n    }, this.state.messageError), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn--white\",\n      onClick: e => this.onSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }\n    }, \"Send\")))), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modalIsOpen,\n      onAfterOpen: this.afterOpenModal,\n      onRequestClose: this.closeModal,\n      contentLabel: \"Example Modal\",\n      style: customStyles,\n      closeTimeoutMS: 150,\n      overlayClassName: \"formOverlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modalHeader-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"modalHeader-container__text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }\n    }, \"Your message was sent!\"), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-times modalHeader-container__close-icon\",\n      \"aria-hidden\": \"true\",\n      onClick: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"modal-body__text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }\n    }, this.state.resData), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }, \"I'll be in touch with you soon.\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn--white\",\n      style: {\n        textAlign: \"center\",\n        margin: \"10px auto\",\n        display: \"block\"\n      },\n      onClick: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }\n    }, \"Close\")));\n  }\n\n}\n\nexport default Contact; //   this.handleChange = this.handleChange.bind(this);\n//   this.handleSubmit = this.handleSubmit.bind(this);\n// }\n// onSubmit = e => {\n//   e.preventDefault();\n//   if (this.state.name === \"\") {\n//     this.setState({\n//       nameError: \"Please provide your name\"\n//     });\n//   } else {\n//     this.setState({ nameError: \"\" });\n//   }\n//   if (this.state.email === \"\") {\n//     this.setState({\n//       emailError: \"Please provide an email address\"\n//     });\n//   } else if (\n//     this.state.email === \"/^((?!@(>)*$/\" ||\n//     this.state.email.indexOf(\".\") === -1\n//   ) {\n//     this.setState({\n//       emailError: \"Please provide a valid email address\"\n//     });\n//   } else {\n//     this.setState({\n//       emailError: \"\"\n//     });\n//   }\n// };\n// handleChange = e => {\n//   this.setState({ [e.target.name]: e.target.value });\n// };\n// async handleSubmit(e) {\n//   e.preventDefault();\n//   const { name, email, message } = this.state;\n//   const form = await axios.post(\"/api/form\", {\n//     name,\n//     email,\n//     message\n//   });\n// }\n//   this.setState({\n//     name: \"\",\n//     email: \"\",\n//     message: \"\"\n//   });\n// render() {\n//   return (\n//     <div className=\"container contact-form\">\n//       <h1>Lets Chat!</h1>\n//       <div class=\"row\">\n//         <div className=\"col-md-6\">\n//           <p>Thousand Oaks, CA</p>\n//           <p>Email: TravisLloyd@Lloyddm.com</p>\n//           <p>Phone: (661) 414-4027</p>\n//         </div>\n//         <div className=\"col-md-6\">\n//           <Form\n//             ref={form => (this.form = form)}\n//             role=\"form\"\n//             id=\"emailForm\"\n//             onSubmit={this.handleSubmit}\n//           >\n//             <FormGroup>\n//               <Label for=\"name\">Name</Label>\n//               <Input\n//                 type=\"text\"\n//                 name=\"name\"\n//                 onChange={this.handleChange}\n//                 placeholder=\"Name\"\n//               ></Input>\n//             </FormGroup>\n//             <FormGroup>\n//               <label for=\"email\">Email</label>\n//               <Input\n//                 type=\"email\"\n//                 name=\"email\"\n//                 placeholder=\"example@email.com\"\n//                 onChange={this.handleChange}\n//               ></Input>\n//             </FormGroup>\n//             <FormGroup>\n//               <label for=\"textarea\">Message</label>\n//               <Input\n//                 type=\"textarea\"\n//                 name=\"message\"\n//                 placeholder=\"Write your message here\"\n//                 onChange={this.handleChange}\n//               ></Input>\n//             </FormGroup>\n//             <FormGroup>\n//               <Button action=\"submit\">Submit</Button>\n//             </FormGroup>\n//           </Form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };","map":{"version":3,"sources":["/Users/jackson231/Desktop/react_projects/BaseReactTemplate/client/src/components/pages/contact.js"],"names":["React","Component","Form","FormGroup","Input","Label","Button","axios","Modal","setAppElement","customStyles","content","top","left","right","bottom","width","minWidth","height","minHeight","marginRight","transform","padding","borderRadius","border","Contact","state","name","nameError","email","emailError","subject","subjectError","message","messageError","resData","modalIsOpen","change","e","setState","target","value","closeModal","onSubmit","preventDefault","indexOf","setTimeout","post","then","response","data","catch","error","console","log","render","margin","length","afterOpenModal","textAlign","display"],"mappings":"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":["import React, { Component } from \"react\";\nimport { Form, FormGroup, Input, Label, Button } from \"reactstrap\";\nimport axios from \"axios\";\nimport Modal from \"react-modal\";\n\nModal.setAppElement(\"div\");\n\nconst customStyles = {\n  content: {\n    top: \"calc(50% + 27.5px)\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    width: \"35%\",\n    minWidth: \"250px\",\n    height: \"25%\",\n    minHeight: \"250px\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    padding: \"0\",\n    borderRadius: \"3px\",\n    border: \"none\"\n  }\n};\n\nclass Contact extends React.Component {\n  state = {\n    name: \"\",\n    nameError: \"\",\n    email: \"\",\n    emailError: \"\",\n    subject: \"\",\n    subjectError: \"\",\n    message: \"\",\n    messageError: \"\",\n\n    resData: \"\",\n\n    modalIsOpen: false\n  };\n\n  change = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  closeModal = () => {\n    this.setState({\n      modalIsOpen: false\n    });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.name === \"\") {\n      this.setState({\n        nameError: \"Please provide your name\"\n      });\n    } else {\n      this.setState({\n        nameError: \"\"\n      });\n    }\n\n    if (this.state.email === \"\") {\n      this.setState({\n        emailError: \"Please provide an email address\"\n      });\n    } else if (\n      this.state.email === /^((?!@).)*$/ ||\n      this.state.email.indexOf(\".\") === -1\n    ) {\n      this.setState({\n        emailError: \"Please provide a valid email address\"\n      });\n    } else {\n      this.setState({\n        emailError: \"\"\n      });\n    }\n\n    if (this.state.subject === \"\") {\n      this.setState({\n        subjectError: \"Please provide a subject message\"\n      });\n    } else {\n      this.setState({\n        subjectError: \"\"\n      });\n    }\n\n    if (this.state.message === \"\") {\n      this.setState({\n        messageError: \"Please leave a message\"\n      });\n    } else {\n      this.setState({\n        messageError: \"\"\n      });\n    }\n\n    setTimeout(() => {\n      if (\n        this.state.nameError === \"\" &&\n        this.state.emailError === \"\" &&\n        this.state.subjectError === \"\" &&\n        this.state.messageError === \"\"\n      ) {\n        axios\n          .post(\"/api/form\", {\n            name: this.state.name,\n            email: this.state.email,\n            subject: this.state.subject,\n            message: this.state.message\n          })\n          .then(response => {\n            this.setState({\n              resData: response.data\n            });\n\n            this.setState({\n              modalIsOpen: true\n            });\n\n            this.setState({\n              name: \"\",\n              email: \"\",\n              subject: \"\",\n              message: \"\"\n            });\n          })\n          .catch(function(error) {\n            console.log(error.response);\n          });\n      } else {\n        this.setState({\n          resData: \"Oops! Something went wrong!\"\n        });\n      }\n    }, 10);\n  };\n\n  render() {\n    return (\n      <div id=\"contactForm\" className=\"container contact-form\">\n        <div className=\"full-width-row cta-form--bg\">\n          <div className=\"row-container\">\n            <form className=\"cta-form\">\n              <FormGroup>\n                <label className=\"cta-form__label\" htmlFor=\"name\">\n                  Name\n                </label>\n                <input\n                  name=\"name\"\n                  value={this.state.name}\n                  onChange={e => this.change(e)}\n                  type=\"text\"\n                  className=\"cta-form__input\"\n                  id=\"name\"\n                  style={{\n                    margin: `${this.state.nameError.length > 0 ? \"0\" : \"\"}`\n                  }}\n                />\n                <p className=\"form-error\">{this.state.nameError}</p>\n              </FormGroup>\n              <label className=\"cta-form__label\" htmlFor=\"email\">\n                Email\n              </label>\n              <input\n                name=\"email\"\n                value={this.state.email}\n                onChange={e => this.change(e)}\n                type=\"text\"\n                className=\"cta-form__input\"\n                id=\"email\"\n                style={{\n                  margin: `${this.state.emailError.length > 0 ? \"0\" : \"\"}`\n                }}\n              />\n              <p className=\"form-error\">{this.state.emailError}</p>\n              <label className=\"cta-form__label\" htmlFor=\"subject\">\n                Subject\n              </label>\n              <input\n                name=\"subject\"\n                value={this.state.subject}\n                onChange={e => this.change(e)}\n                type=\"text\"\n                className=\"cta-form__input\"\n                id=\"subject\"\n                style={{\n                  margin: `${this.state.subjectError.length > 0 ? \"0\" : \"\"}`\n                }}\n              />\n              <p className=\"form-error\">{this.state.subjectError}</p>\n              <label className=\"cta-form__label\" htmlFor=\"message\">\n                Message\n              </label>\n              <textarea\n                name=\"message\"\n                onChange={e => this.change(e)}\n                value={this.state.message}\n                className=\"cta-form__textarea\"\n                id=\"message\"\n                style={{\n                  margin: `${this.state.messageError.length > 0 ? \"0\" : \"\"}`\n                }}\n              />\n              <p className=\"form-error\">{this.state.messageError}</p>\n              <button\n                className=\"btn btn--white\"\n                onClick={e => this.onSubmit(e)}\n              >\n                Send\n              </button>\n            </form>\n          </div>\n        </div>\n\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onAfterOpen={this.afterOpenModal}\n          onRequestClose={this.closeModal}\n          contentLabel=\"Example Modal\"\n          style={customStyles}\n          closeTimeoutMS={150}\n          overlayClassName=\"formOverlay\"\n        >\n          <div className=\"modalHeader-container\">\n            <span className=\"modalHeader-container__text\">\n              Your message was sent!\n            </span>\n            <i\n              className=\"fa fa-times modalHeader-container__close-icon\"\n              aria-hidden=\"true\"\n              onClick={this.closeModal}\n            ></i>\n          </div>\n\n          <div className=\"modal-body\">\n            <p className=\"modal-body__text\">{this.state.resData}</p>\n            <p>I'll be in touch with you soon.</p>\n          </div>\n\n          <button\n            className=\"btn btn--white\"\n            style={{\n              textAlign: \"center\",\n              margin: \"10px auto\",\n              display: \"block\"\n            }}\n            onClick={this.closeModal}\n          >\n            Close\n          </button>\n        </Modal>\n      </div>\n    );\n  }\n}\nexport default Contact;\n\n//   this.handleChange = this.handleChange.bind(this);\n//   this.handleSubmit = this.handleSubmit.bind(this);\n// }\n\n// onSubmit = e => {\n//   e.preventDefault();\n\n//   if (this.state.name === \"\") {\n//     this.setState({\n//       nameError: \"Please provide your name\"\n//     });\n//   } else {\n//     this.setState({ nameError: \"\" });\n//   }\n\n//   if (this.state.email === \"\") {\n//     this.setState({\n//       emailError: \"Please provide an email address\"\n//     });\n//   } else if (\n//     this.state.email === \"/^((?!@(>)*$/\" ||\n//     this.state.email.indexOf(\".\") === -1\n//   ) {\n//     this.setState({\n//       emailError: \"Please provide a valid email address\"\n//     });\n//   } else {\n//     this.setState({\n//       emailError: \"\"\n//     });\n//   }\n// };\n// handleChange = e => {\n//   this.setState({ [e.target.name]: e.target.value });\n// };\n\n// async handleSubmit(e) {\n//   e.preventDefault();\n//   const { name, email, message } = this.state;\n\n//   const form = await axios.post(\"/api/form\", {\n//     name,\n//     email,\n//     message\n//   });\n// }\n\n//   this.setState({\n//     name: \"\",\n//     email: \"\",\n//     message: \"\"\n//   });\n\n// render() {\n//   return (\n//     <div className=\"container contact-form\">\n//       <h1>Lets Chat!</h1>\n//       <div class=\"row\">\n//         <div className=\"col-md-6\">\n//           <p>Thousand Oaks, CA</p>\n//           <p>Email: TravisLloyd@Lloyddm.com</p>\n//           <p>Phone: (661) 414-4027</p>\n//         </div>\n\n//         <div className=\"col-md-6\">\n//           <Form\n//             ref={form => (this.form = form)}\n//             role=\"form\"\n//             id=\"emailForm\"\n//             onSubmit={this.handleSubmit}\n//           >\n//             <FormGroup>\n//               <Label for=\"name\">Name</Label>\n//               <Input\n//                 type=\"text\"\n//                 name=\"name\"\n//                 onChange={this.handleChange}\n//                 placeholder=\"Name\"\n//               ></Input>\n//             </FormGroup>\n//             <FormGroup>\n//               <label for=\"email\">Email</label>\n//               <Input\n//                 type=\"email\"\n//                 name=\"email\"\n//                 placeholder=\"example@email.com\"\n//                 onChange={this.handleChange}\n//               ></Input>\n//             </FormGroup>\n//             <FormGroup>\n//               <label for=\"textarea\">Message</label>\n//               <Input\n//                 type=\"textarea\"\n//                 name=\"message\"\n//                 placeholder=\"Write your message here\"\n//                 onChange={this.handleChange}\n//               ></Input>\n//             </FormGroup>\n//             <FormGroup>\n//               <Button action=\"submit\">Submit</Button>\n//             </FormGroup>\n//           </Form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n"]},"metadata":{},"sourceType":"module"}